/*!
 * A Node.JS library for the M-Pesa Mozambique API
 *
 * @author Ivan Ruby <https://ivanruby.com>
 * @license MIT
 */
function Transaction(e){this._public_key=e.public_key,this._api_host=e.api_host,this._api_key=e.api_key,this._origin=e.origin,this._service_provider_code=e.service_provider_code,this._initiator_identifier=e.initiator_identifier,this._security_credential=e.security_credential,this._getBearerToken=function(){return certificate="-----BEGIN PUBLIC KEY-----\n"+this._public_key+"\n-----END PUBLIC KEY-----",public_key=new NodeRSA,public_key.setOptions({encryptionScheme:"pkcs1"}),public_key.importKey(Buffer.from(certificate),"public"),token=public_key.encrypt(Buffer.from(this._api_key)),"Bearer "+Buffer.from(token).toString("base64")},this._request_headers={"Content-Type":"application/json",Origin:this._origin,Authorization:this._getBearerToken()},this.c2b=async function(e){return request={method:"post",url:"https://"+this._api_host+":18352/ipg/v1x/c2bPayment/singleStage/",data:{input_ServiceProviderCode:this._service_provider_code,input_CustomerMSISDN:e.msisdn,input_Amount:parseFloat(e.amount).toFixed(2),input_TransactionReference:e.reference,input_ThirdPartyReference:e.third_party_reference},headers:this._request_headers},await new Promise(function(e,t){axios(request).then(function(t){e(t)}).catch(function(e){t(e)})})},this.query=async function(e){return request={method:"get",url:"https://"+this._api_host+":18353/ipg/v1x/queryTransactionStatus/?input_QueryReference="+e.query_reference+"&input_ServiceProviderCode="+this._service_provider_code+"&input_ThirdPartyReference="+e.third_party_reference,headers:this._request_headers},await new Promise(function(e,t){axios(request).then(function(t){e(t.data)}).catch(function(e){t(e.data)})})},this.reverse=function(e){return request={method:"put",url:"https://"+this._api_host+":18354/ipg/v1x/reversal/",data:{input_ReversalAmount:Number.parseFloat(e.amount).toFixed(2),input_TransactionID:e.transaction_id,input_ThirdPartyReference:e.third_party_reference,input_ServiceProviderCode:this._service_provider_code,input_InitiatorIdentifier:this._initiator_identifier,input_SecurityCredential:this._security_credential},headers:this.request_headers},new Promise(function(e,t){axios(request).then(function(t){e(t.data)}).catch(function(e){t(e.data)})})}}axios=require("axios"),NodeRSA=require("node-rsa"),module.exports=Transaction;